uniteste # ../integração/uniteste.0

uniteste.descrever({ nome: "Função" testes: [
  uniteste.iguais([
    {
      quadrado: x => x * x
      resultado: (quadrado = (x => x * x) quadrado(5))
    }.resultado
    25
  ])
  uniteste.iguais([
    {
      soma: args => args[0] + args[1]
      resultado: (soma = (args => args[0] + args[1]) soma([3 7]))
    }.resultado
    10
  ])
  uniteste.iguais([
    {
      dentro_intervalo: args => args[0] >= args[1] & args[0] <= args[2]
      resultado: (dentro_intervalo = (args => args[0] >= args[1] & args[0] <= args[2]) dentro_intervalo([5 1 10]))
    }.resultado
    1
  ])
  uniteste.iguais([
    {
      dentro_intervalo: args => args[0] >= args[1] & args[0] <= args[2]
      resultado: (dentro_intervalo = (args => args[0] >= args[1] & args[0] <= args[2]) dentro_intervalo([15 1 10]))
    }.resultado
    0
  ])
  uniteste.iguais([
    {
      nome_completo: args => [args[0] " de " args[1]] * ""
      resultado: (nome_completo = (args => [args[0] " de " args[1]] * "") nome_completo(["Geralt" "The Witcher"]))
    }.resultado
    "Geralt de The Witcher"
  ])
  uniteste.iguais([
    {
      área_retângulo: args => args[0] * args[1]
      resultado: (área_retângulo = (args => args[0] * args[1]) área_retângulo([5 10]))
    }.resultado
    50
  ])
  uniteste.iguais([
    {
      área_triângulo: args => {
        divisor: 2
        área: (args[0] * args[1]) / (divisor = 2 divisor)
        resultado: (área = (args[0] * args[1]) / (divisor = 2 divisor) área)
      }.resultado
      resultado: (área_triângulo = (args => {
        divisor: 2
        área: (args[0] * args[1]) / (divisor = 2 divisor)
        resultado: (área = (args[0] * args[1]) / (divisor = 2 divisor) área)
      }.resultado) área_triângulo([10 8]))
    }.resultado
    40
  ])
  uniteste.iguais([
    {
      maior: args => args[0] > args[1] ? args[0] : args[1]
      resultado: (maior = (args => args[0] > args[1] ? args[0] : args[1]) maior([8 3]))
    }.resultado
    8
  ])
  uniteste.iguais([
    {
      maior: args => args[0] > args[1] ? args[0] : args[1]
      resultado: (maior = (args => args[0] > args[1] ? args[0] : args[1]) maior([2 9]))
    }.resultado
    9
  ])
  uniteste.iguais([
    {
      iniciais: [
        _ => "Bulbasaur"
        _ => "Charmander"
        _ => "Squirtle"
      ]
      resultado: (iniciais = [
        _ => "Bulbasaur"
        _ => "Charmander"
        _ => "Squirtle"
      ] iniciais[1](0))
    }.resultado
    "Charmander"
  ])
  ]})