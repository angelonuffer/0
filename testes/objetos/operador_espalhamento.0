uniteste # ../integração/uniteste.0

uniteste.descrever({"Operador de espalhamento" {
  uniteste.descrever({"Com itens sem chaves (arrays simples)" {
    uniteste.listas_iguais({
      {...{"a" "b"} "c"}
      {"a" "b" "c"}
    })
    
    uniteste.listas_iguais({
      {
        objeto1: {"Star Wars" "Matrix"}
        objeto2: {"Jurassic Park" "Avatar"}
        resultado: {...objeto1 ...objeto2}
      }.resultado
      {"Star Wars" "Matrix" "Jurassic Park" "Avatar"}
    })
    
    uniteste.listas_iguais({
      {
        números: {1 2 3}
        resultado: {"inicio" ...números "fim"}
      }.resultado
      {"inicio" 1 2 3 "fim"}
    })
    
    uniteste.listas_iguais({
      {
        filmes: {"Star Wars" "O Senhor dos Anéis" "Matrix"}
        resultado: {...filmes[0:2] "Jurassic Park"}
      }.resultado
      {"Star Wars" "O Senhor dos Anéis" "Jurassic Park"}
    })
  }})
  
  uniteste.descrever({"Com itens com chaves" {
    // Teste: objeto com chaves pode ser acessada normalmente
    uniteste.iguais({
      {
        dados: {nome: "João" idade: 30}
        resultado: dados["nome"]
      }.resultado
      "João"
    })
    
    // Teste: espalhar objeto simples em contexto que aceita chaves
    uniteste.iguais({
      {
        objeto_simples: {"valor1" "valor2"}
        dados_com_chaves: {nome: "João" ...objeto_simples idade: 30}
        resultado: dados_com_chaves[0]
      }.resultado
      "valor1"
    })
    
    // Teste: espalhar objeto com chaves
    uniteste.iguais({
      {
        dados1: {nome: "João" cidade: "São Paulo"}
        dados2: {idade: 30 profissao: "Desenvolvedor"}
        resultado: {...dados1 ...dados2}
        final: resultado["nome"]
      }.final
      "João"
    })
    
    // Teste: espalhar objeto com chaves (propriedade do segundo objeto)
    uniteste.iguais({
      {
        dados1: {nome: "João" cidade: "São Paulo"}
        dados2: {idade: 30 profissao: "Desenvolvedor"}
        resultado: {...dados1 ...dados2}
        final: resultado["profissao"]
      }.final
      "Desenvolvedor"
    })
    
    // Teste: misturar espalhamento com novos valores
    uniteste.iguais({
      {
        base: {nome: "João"}
        resultado: {...base idade: 30 cidade: "São Paulo"}
        final: resultado["cidade"]
      }.final
      "São Paulo"
    })
  }})
  
  uniteste.descrever({"Comportamento misto" {
    // Misturar itens simples e com chaves
    uniteste.listas_iguais({
      {
        objeto_simples: {"item1" "item2"}
        objeto_resultado: {nome: "João" ...objeto_simples cidade: "São Paulo"}
        final: {objeto_resultado[0] objeto_resultado[1]}
      }.final
      {"item1" "item2"}
    })
    
    // Acessar propriedade nomeada após espalhamento
    uniteste.iguais({
      {
        objeto_simples: {"item1" "item2"}
        objeto_resultado: {nome: "João" ...objeto_simples cidade: "São Paulo"}
        final: objeto_resultado["nome"]
      }.final
      "João"
    })
    
    // Acessar propriedade nomeada adicionada após espalhamento
    uniteste.iguais({
      {
        objeto_simples: {"item1" "item2"}
        objeto_resultado: {nome: "João" ...objeto_simples cidade: "São Paulo"}
        final: objeto_resultado["cidade"]
      }.final
      "São Paulo"
    })
    
    // Verificar tamanho do objeto resultante
    uniteste.iguais({
      {
        objeto_simples: {"item1" "item2"}
        objeto_resultado: {nome: "João" ...objeto_simples cidade: "São Paulo"}
        final: objeto_resultado[.]
      }.final
      2
    })
    
    // Verificar chaves do objeto resultante
    uniteste.listas_iguais({
      {
        objeto_simples: {"item1" "item2"}
        objeto_resultado: {nome: "João" ...objeto_simples cidade: "São Paulo"}
        final: objeto_resultado[*]
      }.final
      {"nome" "cidade"}
    })
  }})
}})